# http server parameters
http {
  server {
    host: "0.0.0.0"
    host: ${?NH_CONVERSATION_HTTP_HOST}

    port: 8082
    port: ${?NH_CONVERSATION_HTTP_PORT}

    idle-timeout: 60.seconds
    idle-timeout: ${?NH_CONVERSATION_HTTP_IDLE_TIMEOUT}

    response-header-timeout: 30.seconds
    response-header-timeout: ${?NH_CONVERSATION_HTTP_RESPONSE_HEADER_TIMEOUT}

    use-gzip: false
    use-gzip: ${?NH_CONVERSATION_HTTP_USE_GZIP}

    use-keep-alive: false
    use-keep-alive: ${?NH_CONVERSATION_HTTP_SOCKET_KEEP_ALIVE}

    use-netty-backend: true
    use-netty-backend: ${?NH_CONVERSATION_HTTP_USE_NETTY_BACKEND}
  }

  auth {
    // Dummy data auth
    // type = dummy
    user: nh-user-dummy
    roles: [nh-admin]
    // End of Dummy data auth
  }
}

db {

  read {
    connection {
      jdbc-driver-name: "org.postgresql.Driver"

      jdbc-url: "jdbc:postgresql://localhost:5432/network_highload"
      jdbc-url: ${?NH_CONVERSATION_READ_POSTGRES_JOB_JDBC_URL}

      user: "postgres"
      user: ${?NH_CONVERSATION_READ_POSTGRES_DB_USERNAME}

      password: "postgres"
      password: ${?NH_CONVERSATION_READ_POSTGRES_DB_PASSWORD}
    }

    pool {
      connection-max-pool-size: 8
      connection-max-pool-size: ${?NH_CONVERSATION_DB_READ_CONNECTIONS_MAX}

      connection-idle-pool-size: 8
      connection-idle-pool-size: ${?NH_CONVERSATION_DB_READ_CONNECTIONS_IDLE}

      connection-timeout: 30 seconds
      connection-timeout: ${?NH_CONVERSATION_DB_READ_CONNECTION_TIMEOUT}

      connection-idle-timeout: 5 minute
      connection-idle-timeout: ${?NH_CONVERSATION_DB_READ_CONNECTION_IDLE_TIMEOUT}

      connection-max-lifetime: 10 minutes
      connection-max-lifetime: ${?NH_CONVERSATION_DB_READ_CONNECTION_MAX_LIFETIME}

      thread-pool-size: 8
      thread-pool-size: ${?NH_CONVERSATION_DB_READ_THREADS}

      leak-detection-threshold: 10 seconds
      leak-detection-threshold: ${?NH_CONVERSATION_DB_READ_LEAK_DETECTION_THRESHOLD}

      # set network timeout between HikariCP and database
      # socketTimeout should be set to at least 2-3x longer than your longest expected query.
      socket-timeout: 5 minutes
      socket-timeout: ${?NH_CONVERSATION_HIKARI_READ_SOCKET_TIMEOUT}

      # controls how frequently HikariCP will attempt to keep a connection alive,
      # in order to prevent it from being timed out by the database or network infrastructure.
      keep-alive-timeout: 2 minutes
      keep-alive-timeout: ${?NH_CONVERSATION_HIKARI_READ_KEEP_ALIVE_TIMEOUT}
    }

    transaction-retry {
      retry-count: 3
      retry-count: ${?NH_CONVERSATION_READ_TRANSACTION_RETRY_COUNT}

      base-interval: 50.millis
      base-interval: ${?NH_CONVERSATION_READ_TRANSACTION_BASE_INTERVAL}
    }
  }

  write {
    connection {
      jdbc-driver-name: "org.postgresql.Driver"

      jdbc-url: "jdbc:postgresql://localhost:5432/network_highload"
      jdbc-url: ${?NH_CONVERSATION_WRITE_POSTGRES_JOB_JDBC_URL}

      user: "postgres"
      user: ${?NH_CONVERSATION_WRITE_POSTGRES_DB_USERNAME}

      password: "postgres"
      password: ${?NH_CONVERSATION_WRITE_POSTGRES_DB_PASSWORD}
    }

    pool {
      connection-max-pool-size: 20
      connection-max-pool-size: ${?NH_CONVERSATION_DB_WRITE_CONNECTIONS_MAX}

      connection-idle-pool-size: 10
      connection-idle-pool-size: ${?NH_CONVERSATION_DB_WRITE_CONNECTIONS_IDLE}

      connection-timeout: 30 seconds
      connection-timeout: ${?NH_CONVERSATION_DB_WRITE_CONNECTION_TIMEOUT}

      connection-idle-timeout: 5 minute
      connection-idle-timeout: ${?NH_CONVERSATION_DB_WRITE_CONNECTION_IDLE_TIMEOUT}

      connection-max-lifetime: 10 minutes
      connection-max-lifetime: ${?NH_CONVERSATION_DB_WRITE_CONNECTION_MAX_LIFETIME}

      thread-pool-size: 8
      thread-pool-size: ${?NH_CONVERSATION_DB_WRITE_THREADS}

      leak-detection-threshold: 10 seconds
      leak-detection-threshold: ${?NH_CONVERSATION_DB_WRITE_LEAK_DETECTION_THRESHOLD}

      # set network timeout between HikariCP and database
      # socketTimeout should be set to at least 2-3x longer than your longest expected query.
      socket-timeout: 5 minutes
      socket-timeout: ${?NH_CONVERSATION_WRITE_HIKARI_SOCKET_TIMEOUT}

      # controls how frequently HikariCP will attempt to keep a connection alive,
      # in order to prevent it from being timed out by the database or network infrastructure.
      keep-alive-timeout: 2 minutes
      keep-alive-timeout: ${?NH_CONVERSATION_WRITE_HIKARI_KEEP_ALIVE_TIMEOUT}
    }

    transaction-retry {
      retry-count: 3
      retry-count: ${?NH_CONVERSATION_WRITE_TRANSACTION_RETRY_COUNT}

      base-interval: 50.millis
      base-interval: ${?NH_CONVERSATION_WRITE_TRANSACTION_BASE_INTERVAL}
    }
  }

  migrations {
    # path to job tables migration files
    locations: ["classpath:/migrations/postgres"],
    mixed: allow
  }

  metrics-enabled: true
  metrics-enabled: ${?NH_CONVERSATION_DB_ENABLE_HIKARI_METRICS}

}

metrics {
  namespace: "network_highload_backend"
  namespace: ${?NH_CONVERSATION_METRICS_NAMESPACE}
}
